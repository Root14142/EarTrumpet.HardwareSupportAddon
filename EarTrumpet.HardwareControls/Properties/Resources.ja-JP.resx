<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddNewFromSelectedText" xml:space="preserve">
    <value>選択項目から新規追加</value>
  </data>
  <data name="AddNewText" xml:space="preserve">
    <value>新規追加</value>
  </data>
  <data name="ApplicationMuteText" xml:space="preserve">
    <value>アプリミュート</value>
  </data>
  <data name="ApplicationSelectionText" xml:space="preserve">
    <value>アプリ選択</value>
  </data>
  <data name="ApplicationVolumeText" xml:space="preserve">
    <value>アプリボリューム</value>
  </data>
  <data name="AudioDeviceMuteText" xml:space="preserve">
    <value>デバイスミュート</value>
  </data>
  <data name="AudioDeviceText" xml:space="preserve">
    <value>デバイス</value>
  </data>
  <data name="AudioDeviceVolumeText" xml:space="preserve">
    <value>デバイスボリューム</value>
  </data>
  <data name="ButtonText" xml:space="preserve">
    <value>ボタン</value>
  </data>
  <data name="CommandText" xml:space="preserve">
    <value>コマンド</value>
  </data>
  <data name="ControlText" xml:space="preserve">
    <value>コントローラ</value>
  </data>
  <data name="CycleDefaultDevices" xml:space="preserve">
    <value>デフォルトデバイスサイクル</value>
  </data>
  <data name="DecreaseText" xml:space="preserve">
    <value>減少</value>
  </data>
  <data name="DeejControlWizardText" xml:space="preserve">
    <value>Deejコントロールウィザー</value>
  </data>
  <data name="DeleteSelectedText" xml:space="preserve">
    <value>選択項目削除</value>
  </data>
  <data name="DeviceText" xml:space="preserve">
    <value>デバイス</value>
  </data>
  <data name="DeviceTypeText" xml:space="preserve">
    <value>デバイスタイプ</value>
  </data>
  <data name="DisplayTimeText" xml:space="preserve">
    <value>表示時間</value>
  </data>
  <data name="EditSelectedText" xml:space="preserve">
    <value>選択項目編集</value>
  </data>
  <data name="EnableOverlayText" xml:space="preserve">
    <value>オーバーレイ有効/無効</value>
  </data>
  <data name="HardwareControlInformation" xml:space="preserve">
    <value>デバイスの音量やアプリケーションの音量をハードウェアにて制御する(MIDIとdeejのデバイスに対応)。</value>
  </data>
  <data name="HardwareControlsTitle" xml:space="preserve">
    <value>ハードウェアコントロール</value>
  </data>
  <data name="HardwareControlWizardMinMaxButtonControlTypeInstructions" xml:space="preserve">
    <value>選択したボタンをリリース状態にし、対応する[セット]ボタンをクリック。次に、選択したボタンをプッシュ状態にし、対応する[セット]ボタンをクリック。</value>
  </data>
  <data name="HardwareControlWizardMinMaxLinearPotentiometerControlTypeInstructions" xml:space="preserve">
    <value>選択したコントローラを最小まで移動し、対応する[セット]ボタンをクリック。次に選択したコントローラを最大まで移動し、対応する[セット]ボタンをクリック。</value>
  </data>
  <data name="HardwareControlWizardMinMaxRotaryEncoderControlTypeInstructions" xml:space="preserve">
    <value>選択したコントローラを減少方向に回し、対応する[設定]ボタンをクリック。次に、選択したコントローラを増加方向に回し、対応する[設定]ボタンをクリック。</value>
  </data>
  <data name="HardwareSettingsText" xml:space="preserve">
    <value>追加 / 削除 ハードウェアコントロール</value>
  </data>
  <data name="HardwareWizardInstructions" xml:space="preserve">
    <value>設定したいコントローラを動かすか押します。→動かしたコントローラは以下のコントローラリストに格納される。→そのリストからコントローラを選択する。</value>
  </data>
  <data name="IncompleteDeviceConfigurationMessage" xml:space="preserve">
    <value>デバイスの設定が不完全です！</value>
  </data>
  <data name="IncreaseText" xml:space="preserve">
    <value>増加</value>
  </data>
  <data name="IndexedText" xml:space="preserve">
    <value>インデックス</value>
  </data>
  <data name="LinearPotentiometerText" xml:space="preserve">
    <value>ポテンショメータ</value>
  </data>
  <data name="MaximumText" xml:space="preserve">
    <value>最大</value>
  </data>
  <data name="MidiControlWizardText" xml:space="preserve">
    <value>MIDIコントローラウィザード</value>
  </data>
  <data name="MidiDeviceText" xml:space="preserve">
    <value>MIDIデバイス</value>
  </data>
  <data name="MinimumText" xml:space="preserve">
    <value>最小</value>
  </data>
  <data name="ModeText" xml:space="preserve">
    <value>モード</value>
  </data>
  <data name="NoControlSelectedMessage" xml:space="preserve">
    <value>コントローラ未選択！</value>
  </data>
  <data name="OSDInformation" xml:space="preserve">
    <value>ハードウェアコントローラを使用し音量を変更した際に表示するオーバーレイ。
</value>
  </data>
  <data name="OverlayTitle" xml:space="preserve">
    <value>オーバーレイ</value>
  </data>
  <data name="PositionText" xml:space="preserve">
    <value>ポジション</value>
  </data>
  <data name="PreviewValueText" xml:space="preserve">
    <value>プレビュー</value>
  </data>
  <data name="PushedText" xml:space="preserve">
    <value>プッシュ</value>
  </data>
  <data name="ReleasedText" xml:space="preserve">
    <value>リリース</value>
  </data>
  <data name="RotaryEncoderText" xml:space="preserve">
    <value>ロータリーエンコーダ</value>
  </data>
  <data name="SaveText" xml:space="preserve">
    <value>保存</value>
  </data>
  <data name="ScalingText" xml:space="preserve">
    <value>スケーリング</value>
  </data>
  <data name="SelectionText" xml:space="preserve">
    <value>セレクション</value>
  </data>
  <data name="SelectText" xml:space="preserve">
    <value>選択</value>
  </data>
  <data name="SetAsDefaultDevice" xml:space="preserve">
    <value>デフォルトデバイスに設定</value>
  </data>
  <data name="SetText" xml:space="preserve">
    <value>セット</value>
  </data>
  <data name="TypeText" xml:space="preserve">
    <value>タイプ</value>
  </data>
  <data name="UnknownDeviceSelectedMessageText" xml:space="preserve">
    <value>不明なデバイスが選択されました！</value>
  </data>
  <data name="UnknownDeviceTypeSelectedMessageText" xml:space="preserve">
    <value>不明なデバイスタイプが選択されました！</value>
  </data>
  <data name="XOffsetText" xml:space="preserve">
    <value>X軸オフセット(px)</value>
  </data>
  <data name="YOffsetText" xml:space="preserve">
    <value>Y軸オフセット(px)</value>
  </data>
  <data name="AllAudioDevicesSelectionText" xml:space="preserve">
    <value>*全デバイス*</value>
  </data>
</root>